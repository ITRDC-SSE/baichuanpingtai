version: '2'

services:
  ca1:
    container_name: ca1
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/ca/peerOrg1-cert.pem --ca.keyfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/ca/9ccebd17a745d9cdb1e76efdb2d98f0b1e18466d01c2884717f3f4d9808d8ce6_sk -b admin:adminpw' -d
    volumes:
       - ./cfg:/etc/hyperledger/cfg


  ca2:
    container_name: ca2  
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/ca/peerOrg2-cert.pem --ca.keyfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/ca/1663ec592ea0076ffdbb7a598d1ecb7788e3d26d4c1400b276543503230d4f1e_sk -b admin:adminpw' -d
    volumes:
       - ./cfg:/etc/hyperledger/cfg

  ca3:
    container_name: ca3  
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/ca/peerOrg3-cert.pem --ca.keyfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/ca/8b5543c409d5930a78873ba7710eaf01d8ecf4c1874425dfa88f1c73792213a7_sk -b admin:adminpw' -d
    volumes:
       - ./cfg:/etc/hyperledger/cfg

  ca4:
    container_name: ca4   
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "10054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/ca/peerOrg4-cert.pem --ca.keyfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/ca/f79fd49d5cd27d0d3890f14765db443a86cd017201f64cc2c89dcee4484f3637_sk -b admin:adminpw' -d
    volumes:
       - ./cfg:/etc/hyperledger/cfg

  ca5:
    container_name: ca5
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - "11054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/ca/peerOrg5-cert.pem --ca.keyfile /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/ca/75b518acc6580e1a26b8d9a2f52bf2bb50e295255c99480852627c769644aeea_sk -b admin:adminpw' -d
    volumes:
       - ./cfg:/etc/hyperledger/cfg

  orderer1:
    container_name: orderer1
    image: hyperledger/fabric-orderer
    environment:
      - GRPC_TRACE=all
      - GRPC_VERBOSITY=debug
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/cfg/orderer.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/cfg/crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1
      - ORDERER_GENERAL_TLS_ENABLED=false
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/cfg/crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1/local/tls/c33a4a9301ffb63c12da187bc02835d8b8ceee14e879b016ec4708abc24c1bee_sk
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/cfg/crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1/local/tls/tls-cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/cfg/crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1/cacerts/ordererOrg1-cert.pem, /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/cacerts/peerOrg1-cert.pem, /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer1/cacerts/peerOrg2-cert.pem, /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/peers/peerOrg3Peer1/cacerts/peerOrg3-cert.pem, /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/peers/peerOrg4Peer1/cacerts/peerOrg4-cert.pem, /etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/peers/peerOrg5Peer1/cacerts/peerOrg5-cert.pem]
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testenv_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./cfg:/etc/hyperledger/cfg


  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    ports:
      - "5984:5984"

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    ports:
      - "6984:5984"

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    ports:
      - "7984:5984"

  couchdb4:
    container_name: couchdb4
    image: hyperledger/fabric-couchdb
    ports:
      - "8984:5984"

  couchdb5:
    container_name: couchdb5
    image: hyperledger/fabric-couchdb
    ports:
      - "9984:5984"
      
  peer1:
    container_name: peer1
    image: hyperledger/fabric-peer
    environment:
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer1:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/local/tls/6de7ae4b78beb1fbb15c55c7aefdad07580edcdbc11cc10c86e32a3ab9491a07_sk
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/local/tls/tls-cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/cacerts/peerOrg1-cert.pem
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testenv_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./cfg:/etc/hyperledger/cfg        
    depends_on:
      - orderer1
      - couchdb1
      
  peer2:
    container_name: peer2
    image: hyperledger/fabric-peer
    environment:
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer2
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer1
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer2:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peerOrg2Peer1:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer1/local/tls/b10894c3890c43ea704549dfe1d64497851267219a7fb3dd75f504322fb6af70_sk
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer1/local/tls/tls-cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg2/peers/peerOrg2Peer1/cacerts/peerOrg2-cert.pem
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testenv_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./cfg:/etc/hyperledger/cfg        
    depends_on:
      - orderer1
      - couchdb2
      
  peer3:
    container_name: peer3
    image: hyperledger/fabric-peer
    environment:
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer3
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/peers/peerOrg3Peer1
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer3:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer3:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/peers/peerOrg3Peer1/local/tls/6c8b1d3da8a48f76ebe13454bbeb7a346a329bb8a24f0eb5fca48701cfd2a535_sk
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/peers/peerOrg3Peer1/local/tls/tls-cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg3/peers/peerOrg3Peer1/cacerts/peerOrg3-cert.pem
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testenv_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./cfg:/etc/hyperledger/cfg        
    depends_on:
      - orderer1
      - couchdb3      


  peer4:
    container_name: peer4
    image: hyperledger/fabric-peer
    environment:
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer4
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org4MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/peers/peerOrg4Peer1
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer4:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer4:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/peers/peerOrg4Peer1/local/tls/6acb8c8f647b52b76e81e55e176e72b1cca706eaf0e9e7b0663f94a307357cfd_sk
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/peers/peerOrg4Peer1/local/tls/tls-cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg4/peers/peerOrg4Peer1/cacerts/peerOrg4-cert.pem
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb4:5984
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testenv_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 10051:7051
      - 10053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./cfg:/etc/hyperledger/cfg        
    depends_on:
      - orderer1
      - couchdb4 
            
 
      
  peer5:
    container_name: peer5
    image: hyperledger/fabric-peer
    environment:
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer5
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org5MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/peers/peerOrg5Peer1
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer5:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer5:7051
      - CORE_PEER_TLS_ENABLED=false
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/peers/peerOrg5Peer1/local/tls/d4bbbbf2feed6138ec969b7d771e73ecb92256655081b8023175f41cd24f83bf_sk
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/peers/peerOrg5Peer1/local/tls/tls-cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/cfg/crypto-config/peerOrganizations/peerOrg5/peers/peerOrg5Peer1/cacerts/peerOrg5-cert.pem
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb5:5984
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=testenv_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 11051:7051
      - 11053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./cfg:/etc/hyperledger/cfg        
    depends_on:
      - orderer1
      - couchdb5
       
